{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the PhoneInfoga wiki ! PhoneInfoga is one of the most advanced tools to scan phone numbers using only free resources. The goal is to first gather basic information such as country, area, carrier and line type on any international phone numbers with a very good accuracy. Then try to determine the VoIP provider or search for footprints on search engines to try identify the owner. Get started Introduction Installation Basic usage Formatting phone numbers Dealing with Google captcha Resources Contribute Want to contribute ? Clone and open some pull requests !","title":"Introduction"},{"location":"#welcome-to-the-phoneinfoga-wiki","text":"PhoneInfoga is one of the most advanced tools to scan phone numbers using only free resources. The goal is to first gather basic information such as country, area, carrier and line type on any international phone numbers with a very good accuracy. Then try to determine the VoIP provider or search for footprints on search engines to try identify the owner.","title":"Welcome to the PhoneInfoga wiki !"},{"location":"#get-started","text":"Introduction Installation Basic usage Formatting phone numbers Dealing with Google captcha Resources","title":"Get started"},{"location":"#contribute","text":"Want to contribute ? Clone and open some pull requests !","title":"Contribute"},{"location":"formatting/","text":"The tool only accepts E164 and International formats as input. E164: +3396360XXXX International: +33 9 63 60 XX XX National: 09 63 60 XX XX RFC3966: tel:+33-9-63-60-XX-XX Out-of-country format from US: 011 33 9 63 60 XX XX E.164 formatting for phone numbers entails the following: A + (plus) sign International Country Calling code Local Area code Local Phone number For example, here\u2019s a US-based number in standard local formatting: (415) 555-2671 Here\u2019s the same phone number in E.164 formatting: +14155552671 In the UK, and many other countries internationally, local dialing may require the addition of a '0' in front of the subscriber number. With E.164 formatting, this '0' must usually be removed. For example, here\u2019s a UK-based number in standard local formatting: 020 7183 8750 Here\u2019s the same phone number in E.164 formatting: +442071838750 Custom formatting Sometimes the phone number has footprints but is used with a different formatting. This is a problem because for example if we search for \"+15417543010\", we'll not find web pages that write it that way : \"(541) 754\u20133010\". So the tool use a (optional) custom formatting given by the user to find further and more accurate results. To use this feature properly and make the results more valuable, try to use a format that someone of the number' country would usually use to share the phone number online. For example, French people usually write numbers that way online : 06.20.30.40.50 , 06 20 30 40 50 . For US-based numbers, the most common format is : 543-456-1234 . Here are some examples of custom formatting for US-based phone numbers : +1 618-555-121 (+1)618-555-121 +1/618-555-121 (618) 5551212 (618) 555-1212 (618) 555.1212 (618)5551212 (618)555-1212 (618)555.1212 For European countries (France as example) : +3301 86 48 14 07 +330186481407 +33018 648 140 7 (0033)0186481407 (+33)018 648 140 7 +33/0186481407 (0033)018 648 140 7 +33018-648-140-7 (+33)0186481407 (+33)01 86 48 14 07 +33/018-648-140-7 +33/01-86-48-14-07 +3301-86-48-14-07 (0033)01 86 48 14 07 +33/01 86 48 14 07 (+33)018-648-140-7 (+33)01-86-48-14-07 (0033)01-86-48-14-07 (0033)018-648-140-7 +33/018 648 140 7 Local scan formatting (for developers) The local scan create several variables to be used in OSINT footprinting. Examples : { 'input': '+1 512-618-1212', 'default': '15126181212', 'local': '5126181212', 'international': '+1 512-618-1212', 'country': 'United States', 'countryCode': '+1', 'countryIsoCode': 'US', 'location': 'Texas', 'carrier': '' } { 'input': '+33 0666519669', 'default': '33666519669', 'local': '666519669', 'international': '+33 666519669', 'country': 'France', 'countryCode': '+33', 'countryIsoCode': 'FR', 'location': 'France', 'carrier': 'Bouygues' }","title":"Formatting phone numbers"},{"location":"formatting/#custom-formatting","text":"Sometimes the phone number has footprints but is used with a different formatting. This is a problem because for example if we search for \"+15417543010\", we'll not find web pages that write it that way : \"(541) 754\u20133010\". So the tool use a (optional) custom formatting given by the user to find further and more accurate results. To use this feature properly and make the results more valuable, try to use a format that someone of the number' country would usually use to share the phone number online. For example, French people usually write numbers that way online : 06.20.30.40.50 , 06 20 30 40 50 . For US-based numbers, the most common format is : 543-456-1234 . Here are some examples of custom formatting for US-based phone numbers : +1 618-555-121 (+1)618-555-121 +1/618-555-121 (618) 5551212 (618) 555-1212 (618) 555.1212 (618)5551212 (618)555-1212 (618)555.1212 For European countries (France as example) : +3301 86 48 14 07 +330186481407 +33018 648 140 7 (0033)0186481407 (+33)018 648 140 7 +33/0186481407 (0033)018 648 140 7 +33018-648-140-7 (+33)0186481407 (+33)01 86 48 14 07 +33/018-648-140-7 +33/01-86-48-14-07 +3301-86-48-14-07 (0033)01 86 48 14 07 +33/01 86 48 14 07 (+33)018-648-140-7 (+33)01-86-48-14-07 (0033)01-86-48-14-07 (0033)018-648-140-7 +33/018 648 140 7","title":"Custom formatting"},{"location":"formatting/#local-scan-formatting-for-developers","text":"The local scan create several variables to be used in OSINT footprinting. Examples : { 'input': '+1 512-618-1212', 'default': '15126181212', 'local': '5126181212', 'international': '+1 512-618-1212', 'country': 'United States', 'countryCode': '+1', 'countryIsoCode': 'US', 'location': 'Texas', 'carrier': '' } { 'input': '+33 0666519669', 'default': '33666519669', 'local': '666519669', 'international': '+33 666519669', 'country': 'France', 'countryCode': '+33', 'countryIsoCode': 'FR', 'location': 'France', 'carrier': 'Bouygues' }","title":"Local scan formatting (for developers)"},{"location":"install/","text":"To install PhoneInfoga, you'll need to download source code then install dependencies. Requirements : python3 and python3-pip OR Docker git OR wget and curl Clone the repository git clone https://github.com/sundowndev/PhoneInfoga cd PhoneInfoga/ You can also download the source code archive : wget $(curl -s https://api.github.com/repos/sundowndev/phoneinfoga/releases/latest | grep tarball_url | cut -d '\"' -f 4) -O PhoneInfoga.tar.gz tar -xvzf PhoneInfoga.tar.gz cd sundowndev* Install requirements python3 -m pip install -r requirements.txt Create the config file cp config.example.py config.py To ensure everything works, use the -v option to show the version : python3 phoneinfoga.py -v Using Docker You can pull the repository directly from Docker hub docker pull sundowndev/phoneinfoga:latest Then run the tool docker run --rm -it sundowndev/phoneinfoga --help Or, you can download the source code, then build the docker image Build docker build --rm=true -t phoneinfoga/latest . Usage # docker run --rm -it phoneinfoga/latest --help docker run --rm -it phoneinfoga/latest -n <number> [OPTIONS]","title":"Installation"},{"location":"install/#clone-the-repository","text":"git clone https://github.com/sundowndev/PhoneInfoga cd PhoneInfoga/ You can also download the source code archive : wget $(curl -s https://api.github.com/repos/sundowndev/phoneinfoga/releases/latest | grep tarball_url | cut -d '\"' -f 4) -O PhoneInfoga.tar.gz tar -xvzf PhoneInfoga.tar.gz cd sundowndev*","title":"Clone the repository"},{"location":"install/#install-requirements","text":"python3 -m pip install -r requirements.txt","title":"Install requirements"},{"location":"install/#create-the-config-file","text":"cp config.example.py config.py To ensure everything works, use the -v option to show the version : python3 phoneinfoga.py -v","title":"Create the config file"},{"location":"install/#using-docker","text":"You can pull the repository directly from Docker hub docker pull sundowndev/phoneinfoga:latest Then run the tool docker run --rm -it sundowndev/phoneinfoga --help Or, you can download the source code, then build the docker image","title":"Using Docker"},{"location":"install/#build","text":"docker build --rm=true -t phoneinfoga/latest .","title":"Build"},{"location":"install/#usage","text":"# docker run --rm -it phoneinfoga/latest --help docker run --rm -it phoneinfoga/latest -n <number> [OPTIONS]","title":"Usage"},{"location":"resources/","text":"Resources Inderstanding phone numbers whitepages.fr/phonesystem Formatting-International-Phone-Numbers National_conventions_for_writing_telephone_numbers Open data api.ovh.com/console/#/telephony countrycode.org countryareacode.net directory.didww.com/area-prefixes numinfo.net gist.github.com/Goles/3196253 Footprinting Both free and premium resources are included. Be careful, the listing of a data source here does not mean it has been verified or is used in the tool. Data might be false. Use it as an OSINT framework. Reputation / fraud scamcallfighters.com signal-arnaques.com whosenumber.info findwhocallsme.com yellowpages.ca phonenumbers.ie who-calledme.com usphonesearch.net whocalled.us quinumero.info Disposable numbers receive-sms-online.com receive-sms-now.com hs3x.com twilio.com freesmsverification.com freeonlinephone.org sms-receive.net smsreceivefree.com receive-a-sms.com receivefreesms.com freephonenum.com receive-smss.com receivetxt.com temp-mails.com receive-sms.com receivesmsonline.net receivefreesms.com sms-receive.net pinger.com (=> textnow.com) receive-a-sms.com k7.net kall8.com faxaway.com receivesmsonline.com receive-sms-online.info sellaite.com getfreesmsnumber.com smsreceiving.com smstibo.com catchsms.com freesmscode.com smsreceiveonline.com smslisten.com sms.sellaite.com smslive.co Individuals Facebook Twitter Instagram Linkedin True People Fast People Background Check Pipl Spytox Makelia IvyCall PhoneSearch 411 USPhone WP Plus Thats Them True Caller Sync.me WhoCallsMe ZabaSearch DexKnows WeLeakInfo OK Caller SearchBug numinfo.net Google dork examples insubject:\"+XXXXXXXXX\" OR insubject:\"+XXXXX\" OR insubject:\"XXXXX XXX XXX\" insubject:\"XXXXXXXXX\" OR intitle:\"XXXXXXXXX\" intext:\"XXXXXXXXX\" ext:doc OR ext:docx OR ext:odt OR ext:pdf OR ext:rtf OR ext:sxw OR ext:psw OR ext:ppt OR ext:pptx OR ext:pps OR ext:csv OR ext:txt OR ext:html site:\"hs3x.com\" intext:\"+XXXXXXXXX\" site:signal-arnaques.com intext:\"XXXXXXXXX\" intitle:\" OR Phone Fraud\"","title":"Resources"},{"location":"resources/#resources","text":"","title":"Resources"},{"location":"resources/#inderstanding-phone-numbers","text":"whitepages.fr/phonesystem Formatting-International-Phone-Numbers National_conventions_for_writing_telephone_numbers","title":"Inderstanding phone numbers"},{"location":"resources/#open-data","text":"api.ovh.com/console/#/telephony countrycode.org countryareacode.net directory.didww.com/area-prefixes numinfo.net gist.github.com/Goles/3196253","title":"Open data"},{"location":"resources/#footprinting","text":"Both free and premium resources are included. Be careful, the listing of a data source here does not mean it has been verified or is used in the tool. Data might be false. Use it as an OSINT framework.","title":"Footprinting"},{"location":"resources/#reputation-fraud","text":"scamcallfighters.com signal-arnaques.com whosenumber.info findwhocallsme.com yellowpages.ca phonenumbers.ie who-calledme.com usphonesearch.net whocalled.us quinumero.info","title":"Reputation / fraud"},{"location":"resources/#disposable-numbers","text":"receive-sms-online.com receive-sms-now.com hs3x.com twilio.com freesmsverification.com freeonlinephone.org sms-receive.net smsreceivefree.com receive-a-sms.com receivefreesms.com freephonenum.com receive-smss.com receivetxt.com temp-mails.com receive-sms.com receivesmsonline.net receivefreesms.com sms-receive.net pinger.com (=> textnow.com) receive-a-sms.com k7.net kall8.com faxaway.com receivesmsonline.com receive-sms-online.info sellaite.com getfreesmsnumber.com smsreceiving.com smstibo.com catchsms.com freesmscode.com smsreceiveonline.com smslisten.com sms.sellaite.com smslive.co","title":"Disposable numbers"},{"location":"resources/#individuals","text":"Facebook Twitter Instagram Linkedin True People Fast People Background Check Pipl Spytox Makelia IvyCall PhoneSearch 411 USPhone WP Plus Thats Them True Caller Sync.me WhoCallsMe ZabaSearch DexKnows WeLeakInfo OK Caller SearchBug numinfo.net","title":"Individuals"},{"location":"resources/#google-dork-examples","text":"insubject:\"+XXXXXXXXX\" OR insubject:\"+XXXXX\" OR insubject:\"XXXXX XXX XXX\" insubject:\"XXXXXXXXX\" OR intitle:\"XXXXXXXXX\" intext:\"XXXXXXXXX\" ext:doc OR ext:docx OR ext:odt OR ext:pdf OR ext:rtf OR ext:sxw OR ext:psw OR ext:ppt OR ext:pptx OR ext:pps OR ext:csv OR ext:txt OR ext:html site:\"hs3x.com\" intext:\"+XXXXXXXXX\" site:signal-arnaques.com intext:\"XXXXXXXXX\" intitle:\" OR Phone Fraud\"","title":"Google dork examples"},{"location":"usage/","text":"$ python3 phoneinfoga.py -h usage: phoneinfoga.py -n <number> [options] Advanced information gathering tool for phone numbers (https://github.com/sundowndev/PhoneInfoga) version v1.6.8 optional arguments: -h, --help show this help message and exit -n number, --number number The phone number to scan (E164 or international format) -i input_file, --input input_file Phone number list to scan (one per line) -o output_file, --output output_file Output to save scan results -s scanner, --scanner scanner The scanner to use --recon Launch custom format reconnaissance --no-ansi Disable colored output -v, --version Show tool version Basic scan python3 phoneinfoga.py -n \"(+42) 837544833\" Country code and special chars such as ( ) - + will be escaped so typing US-based numbers stay easy : python3 phoneinfoga.py -n \"+1 555-444-3333\" Note that the country code is essential. You don't know which country code to use ? Find it here Output file Check several numbers at once and send results to a file. Optionally, ensure no color code is used with --no-ansi python3 phoneinfoga.py -i numbers.txt -o results.txt --no-ansi Input file must contain one phone number per line. Invalid numbers will be skipped. Footprinting python3 phoneinfoga.py -n +42837544833 -s footprints Custom format reconnaissance You don't know where to search and what custom format to use ? Let the tool try several custom formats based on the country code for you. python3 phoneinfoga.py -n +42837544833 -s any --recon Available scanners Use any to disable this feature. Default value: all numverify ovh footprints Numverify provide standard but useful informations such as number's country code, location, line type and carrier. OVH is, besides being a web and cloud hosting company, a telecom provider with several VoIP numbers in the Europe. Thanks to their API-key free REST API , we are able to tell if a number is owned by OVH Telecom or not. Footprints scanner uses Google search engine and Google Dorks to search phone number's footprints everywhere on the web. It allows you to search for scam reports, social media profiles, documents and more. Examples Check for a number range on OVH : python3 phoneinfoga.py -n \"+33 01 88 33 40 32\" -s ovh Output : [!] ---- Fetching informations for 330188334032 ---- [!] [-] Running local scan... [+] International format: +33 1 88 33 40 32 [+] Local format: 0188334032 [+] Country found: France (+33) [+] City/Area: France [+] Carrier: [+] Timezone: Europe/Paris [-] The number is valid and possible. [-] Running OVH scan... [-] 1 result found in OVH database [+] Number range: 018833xxxx [+] City: Paris [+] Zip code: [-] Continue scanning ? (y/N)","title":"Basic usage"},{"location":"usage/#basic-scan","text":"python3 phoneinfoga.py -n \"(+42) 837544833\" Country code and special chars such as ( ) - + will be escaped so typing US-based numbers stay easy : python3 phoneinfoga.py -n \"+1 555-444-3333\" Note that the country code is essential. You don't know which country code to use ? Find it here","title":"Basic scan"},{"location":"usage/#output-file","text":"Check several numbers at once and send results to a file. Optionally, ensure no color code is used with --no-ansi python3 phoneinfoga.py -i numbers.txt -o results.txt --no-ansi Input file must contain one phone number per line. Invalid numbers will be skipped.","title":"Output file"},{"location":"usage/#footprinting","text":"python3 phoneinfoga.py -n +42837544833 -s footprints","title":"Footprinting"},{"location":"usage/#custom-format-reconnaissance","text":"You don't know where to search and what custom format to use ? Let the tool try several custom formats based on the country code for you. python3 phoneinfoga.py -n +42837544833 -s any --recon","title":"Custom format reconnaissance"},{"location":"usage/#available-scanners","text":"Use any to disable this feature. Default value: all numverify ovh footprints Numverify provide standard but useful informations such as number's country code, location, line type and carrier. OVH is, besides being a web and cloud hosting company, a telecom provider with several VoIP numbers in the Europe. Thanks to their API-key free REST API , we are able to tell if a number is owned by OVH Telecom or not. Footprints scanner uses Google search engine and Google Dorks to search phone number's footprints everywhere on the web. It allows you to search for scam reports, social media profiles, documents and more.","title":"Available scanners"},{"location":"usage/#examples","text":"Check for a number range on OVH : python3 phoneinfoga.py -n \"+33 01 88 33 40 32\" -s ovh Output : [!] ---- Fetching informations for 330188334032 ---- [!] [-] Running local scan... [+] International format: +33 1 88 33 40 32 [+] Local format: 0188334032 [+] Country found: France (+33) [+] City/Area: France [+] Carrier: [+] Timezone: Europe/Paris [-] The number is valid and possible. [-] Running OVH scan... [-] 1 result found in OVH database [+] Number range: 018833xxxx [+] City: Paris [+] Zip code: [-] Continue scanning ? (y/N)","title":"Examples"}]}